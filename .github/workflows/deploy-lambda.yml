name: Deploy AWS Lambda

on:
  push:
    branches:
      - main

permissions:
    id-token: write # This is required for requesting the JWT
    contents: read  # This is required for actions/checkout
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4.1.0
      with:
        go-version: '1.21.3'
  
    - name: Initialize Go Module
      run: |
        cd app
        go mod init github.con/appfastfood # Inicializa o módulo Go na pasta "app"
  
    - name: Download Dependencies
      run: |
          cd app
          go mod tidy
          go mod download  # Baixa todas as dependências do projeto

    - name: Build Go
      run: |
        cd app
        go build -o main  # Compilar seu código Go
        echo "GitHub Workspace: $GITHUB_WORKSPACE"
        mkdir $GITHUB_WORKSPACE/lambda
        cp main $GITHUB_WORKSPACE/lambda  # Copiar o arquivo binário para a pasta "app"

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: lambda-package
        path: '${{ github.workspace }}/lambda'

    - name: Run Go Tests
      run: |
        cd app
        go test  # Executar seus testes Go


  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v4.0.1
      with:
        role-to-assume: arn:aws:iam::101478099523:role/deploy_lambda_dynamo
        aws-region: us-east-1 # Substitua pela sua região

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: lambda-package
        path: '${{ github.workspace }}/lambda'

    - name: Create Lambda Deployment Package
      run: |
        cd lambda
        zip -r lambda-deployment-package.zip . -i main
        pwd
        ls -la

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: latest

    - name: Terraform Init
      run: |
        cd infra
        terraform init 
        terraform validate

    - name: Terraform Plan
      run: |
        cd infra
        terraform plan -input=false -var="TF_LAMBDA_ZIP_PATH=${{ github.workspace }}/lambda/lambda-deployment-package.zip" -out=tfplan

    - name: Terraform Apply
      continue-on-error: true
      run: |
        cd infra
        terraform apply -input=false -var="TF_LAMBDA_ZIP_PATH=${{ github.workspace }}/lambda/lambda-deployment-package.zip" -auto-approve
      